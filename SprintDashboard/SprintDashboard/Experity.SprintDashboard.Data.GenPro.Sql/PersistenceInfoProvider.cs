//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro v5.5.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Experity.SprintDashboard.Data.GenPro.Sql
{
    /// <summary>Singleton implementation of the PersistenceInfoProvider. This class is the singleton wrapper through which the actual instance is retrieved.</summary>
    internal static class PersistenceInfoProviderSingleton
    {
        private static readonly IPersistenceInfoProvider _providerInstance = new PersistenceInfoProviderCore();

        /// <summary>Dummy static constructor to make sure threadsafe initialization is performed.</summary>
        static PersistenceInfoProviderSingleton() { }

        /// <summary>Gets the singleton instance of the PersistenceInfoProviderCore</summary>
        /// <returns>Instance of the PersistenceInfoProvider.</returns>
        public static IPersistenceInfoProvider GetInstance() { return _providerInstance; }
    }

    /// <summary>Actual implementation of the PersistenceInfoProvider. Used by singleton wrapper.</summary>
    internal class PersistenceInfoProviderCore : PersistenceInfoProviderBase
    {
        /// <summary>Initializes a new instance of the <see cref="PersistenceInfoProviderCore"/> class.</summary>
        internal PersistenceInfoProviderCore()
        {
            Init();
        }

        /// <summary>Method which initializes the internal datastores with the structure of hierarchical types.</summary>
        private void Init()
        {
            this.InitClass();
            InitClinicEntityMappings();
            InitPracticeEntityMappings();
        }

        /// <summary>Inits ClinicEntity's mappings</summary>
        private void InitClinicEntityMappings()
        {
            this.AddElementMapping("ClinicEntity", @"__Master_Practice", @"MessagingApi", "Clinic", 4, 0);
            this.AddElementFieldMapping("ClinicEntity", "ClinicPk", "ClinicPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 0);
            this.AddElementFieldMapping("ClinicEntity", "Name", "Name", false, "VarChar", 10, 0, 0, false, "", null, typeof(System.String), 1);
            this.AddElementFieldMapping("ClinicEntity", "PracticePk", "PracticePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
            this.AddElementFieldMapping("ClinicEntity", "UtcOffset", "UtcOffset", false, "SmallInt", 0, 5, 0, false, "", null, typeof(System.Int16), 3);
        }

        /// <summary>Inits ConversationEntity's mappings</summary>
        private void InitConversationEntityMappings()
        {
            this.AddElementMapping("ConversationEntity", @"__Master_Practice", @"MessagingApi", "Conversation", 6, 0);
            this.AddElementFieldMapping("ConversationEntity", "ClinicPk", "ClinicPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 0);
            this.AddElementFieldMapping("ConversationEntity", "ConversationPk", "ConversationPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 1);
            this.AddElementFieldMapping("ConversationEntity", "IsUrgent", "IsUrgent", false, "Bit", 0, 0, 0, false, "", null, typeof(System.Boolean), 2);
            this.AddElementFieldMapping("ConversationEntity", "PracticePk", "PracticePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 3);
            this.AddElementFieldMapping("ConversationEntity", "Subject", "Subject", true, "VarChar", 120, 0, 0, false, "", null, typeof(System.String), 4);
            this.AddElementFieldMapping("ConversationEntity", "SubjectPk", "SubjectPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 5);
        }

        /// <summary>Inits ConversationActionEntity's mappings</summary>
        private void InitConversationActionEntityMappings()
        {
            this.AddElementMapping("ConversationActionEntity", @"__Master_Practice", @"MessagingApi", "ConversationAction", 6, 0);
            this.AddElementFieldMapping("ConversationActionEntity", "ActionBy", "ActionBy", false, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 0);
            this.AddElementFieldMapping("ConversationActionEntity", "ActionByPk", "ActionByPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 1);
            this.AddElementFieldMapping("ConversationActionEntity", "ActionDateTimeUtc", "ActionDateTimeUtc", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 2);
            this.AddElementFieldMapping("ConversationActionEntity", "ActionType", "ActionType", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
            this.AddElementFieldMapping("ConversationActionEntity", "ConversationActionPk", "ConversationActionPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 4);
            this.AddElementFieldMapping("ConversationActionEntity", "ConversationPk", "ConversationPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 5);
        }

        /// <summary>Inits ConversationLinkEntity's mappings</summary>
        private void InitConversationLinkEntityMappings()
        {
            this.AddElementMapping("ConversationLinkEntity", @"__Master_Practice", @"MessagingApi", "ConversationLink", 7, 0);
            this.AddElementFieldMapping("ConversationLinkEntity", "ArHeaderPk", "ArHeaderPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 0);
            this.AddElementFieldMapping("ConversationLinkEntity", "ChartPk", "ChartPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 1);
            this.AddElementFieldMapping("ConversationLinkEntity", "ConversationLinkPk", "ConversationLinkPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
            this.AddElementFieldMapping("ConversationLinkEntity", "ConversationPk", "ConversationPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 3);
            this.AddElementFieldMapping("ConversationLinkEntity", "CrgHeaderPk", "CrgHeaderPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 4);
            this.AddElementFieldMapping("ConversationLinkEntity", "LogDetailPk", "LogDetailPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 5);
            this.AddElementFieldMapping("ConversationLinkEntity", "PatInfoPk", "PatInfoPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 6);
        }

        /// <summary>Inits LogDetailEntity's mappings</summary>
        private void InitLogDetailEntityMappings()
        {
            this.AddElementMapping("LogDetailEntity", @"__Master_Practice", @"MessagingApi", "LogDetail", 5, 0);
            this.AddElementFieldMapping("LogDetailEntity", "ClinicPk", "ClinicPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 0);
            this.AddElementFieldMapping("LogDetailEntity", "LogDetailPk", "LogDetailPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 1);
            this.AddElementFieldMapping("LogDetailEntity", "PatInfoPk", "PatInfoPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
            this.AddElementFieldMapping("LogDetailEntity", "ServiceDate", "ServiceDate", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 3);
            this.AddElementFieldMapping("LogDetailEntity", "VisitType", "VisitType", false, "Char", 1, 0, 0, false, "", null, typeof(System.String), 4);
        }

        /// <summary>Inits MessageEntity's mappings</summary>
        private void InitMessageEntityMappings()
        {
            this.AddElementMapping("MessageEntity", @"__Master_Practice", @"MessagingApi", "Message", 8, 0);
            this.AddElementFieldMapping("MessageEntity", "AssignedUserPk", "AssignedUserPk", true, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 0);
            this.AddElementFieldMapping("MessageEntity", "Body", "Body", false, "VarChar", 5000, 0, 0, false, "", null, typeof(System.String), 1);
            this.AddElementFieldMapping("MessageEntity", "ConversationPk", "ConversationPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
            this.AddElementFieldMapping("MessageEntity", "MessagePk", "MessagePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 3);
            this.AddElementFieldMapping("MessageEntity", "QueueType", "QueueTypeId", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 4);
            this.AddElementFieldMapping("MessageEntity", "Sender", "Sender", false, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 5);
            this.AddElementFieldMapping("MessageEntity", "SenderPk", "SenderPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 6);
            this.AddElementFieldMapping("MessageEntity", "SentOnUtc", "SentOnUtc", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 7);
        }

        /// <summary>Inits MessageActionEntity's mappings</summary>
        private void InitMessageActionEntityMappings()
        {
            this.AddElementMapping("MessageActionEntity", @"__Master_Practice", @"MessagingApi", "MessageAction", 6, 0);
            this.AddElementFieldMapping("MessageActionEntity", "ActionBy", "ActionBy", false, "VarChar", 50, 0, 0, false, "", null, typeof(System.String), 0);
            this.AddElementFieldMapping("MessageActionEntity", "ActionByPk", "ActionByPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 1);
            this.AddElementFieldMapping("MessageActionEntity", "ActionDateTimeUtc", "ActionDateTimeUtc", false, "DateTime2", 0, 7, 0, false, "", null, typeof(System.DateTime), 2);
            this.AddElementFieldMapping("MessageActionEntity", "ActionType", "ActionType", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
            this.AddElementFieldMapping("MessageActionEntity", "MessageActionPk", "MessageActionPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 4);
            this.AddElementFieldMapping("MessageActionEntity", "MessagePk", "MessagePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 5);
        }

        /// <summary>Inits PatInfoEntity's mappings</summary>
        private void InitPatInfoEntityMappings()
        {
            this.AddElementMapping("PatInfoEntity", @"__Master_Practice", @"MessagingApi", "PatInfo", 4, 0);
            this.AddElementFieldMapping("PatInfoEntity", "FirstName", "FirstName", false, "VarChar", 25, 0, 0, false, "", null, typeof(System.String), 0);
            this.AddElementFieldMapping("PatInfoEntity", "LastName", "LastName", false, "VarChar", 25, 0, 0, false, "", null, typeof(System.String), 1);
            this.AddElementFieldMapping("PatInfoEntity", "PatInfoPk", "PatInfoPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
            this.AddElementFieldMapping("PatInfoEntity", "PatNum", "PatNum", false, "Int", 0, 10, 0, false, "", null, typeof(System.Int32), 3);
        }

        /// <summary>Inits PracticeEntity's mappings</summary>
        private void InitPracticeEntityMappings()
        {
            this.AddElementMapping("PracticeEntity", @"__Master_Practice", @"MessagingApi", "Practice", 3, 0);
            this.AddElementFieldMapping("PracticeEntity", "Environment", "Environment", false, "VarChar", 10, 0, 0, false, "", null, typeof(System.String), 0);
            this.AddElementFieldMapping("PracticeEntity", "Practice", "Practice", false, "VarChar", 5, 0, 0, false, "", null, typeof(System.String), 1);
            this.AddElementFieldMapping("PracticeEntity", "PracticePk", "PracticePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
        }

        /// <summary>Inits QueueTypeEntity's mappings</summary>
        private void InitQueueTypeEntityMappings()
        {
            this.AddElementMapping("QueueTypeEntity", @"__Master_Practice", @"MessagingApi", "QueueType", 2, 0);
            this.AddElementFieldMapping("QueueTypeEntity", "QueueName", "QueueName", false, "VarChar", 20, 0, 0, false, "", null, typeof(System.String), 0);
            this.AddElementFieldMapping("QueueTypeEntity", "QueueTypeId", "QueueTypeId", false, "Int", 0, 10, 0, true, "SCOPE_IDENTITY()", null, typeof(System.Int32), 1);
        }

        /// <summary>Inits SubjectLookupEntity's mappings</summary>
        private void InitSubjectLookupEntityMappings()
        {
            this.AddElementMapping("SubjectLookupEntity", @"__Master_Practice", @"MessagingApi", "SubjectLookup", 3, 0);
            this.AddElementFieldMapping("SubjectLookupEntity", "PracticePk", "PracticePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 0);
            this.AddElementFieldMapping("SubjectLookupEntity", "Subject", "Subject", true, "VarChar", 120, 0, 0, false, "", null, typeof(System.String), 1);
            this.AddElementFieldMapping("SubjectLookupEntity", "SubjectLookupPk", "SubjectLookupPk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 2);
        }

        /// <summary>Inits UserProfileEntity's mappings</summary>
        private void InitUserProfileEntityMappings()
        {
            this.AddElementMapping("UserProfileEntity", @"__Master_Practice", @"MessagingApi", "UserProfile", 6, 0);
            this.AddElementFieldMapping("UserProfileEntity", "FirstName", "FirstName", false, "VarChar", 25, 0, 0, false, "", null, typeof(System.String), 0);
            this.AddElementFieldMapping("UserProfileEntity", "LastName", "LastName", false, "VarChar", 25, 0, 0, false, "", null, typeof(System.String), 1);
            this.AddElementFieldMapping("UserProfileEntity", "Practice", "Practice", false, "VarChar", 5, 0, 0, false, "", null, typeof(System.String), 2);
            this.AddElementFieldMapping("UserProfileEntity", "PracticePk", "PracticePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 3);
            this.AddElementFieldMapping("UserProfileEntity", "UserId", "UserId", false, "VarChar", 10, 0, 0, false, "", null, typeof(System.String), 4);
            this.AddElementFieldMapping("UserProfileEntity", "UserProfilePk", "UserProfilePk", false, "UniqueIdentifier", 0, 0, 0, false, "", null, typeof(System.Guid), 5);
        }

    }
}
